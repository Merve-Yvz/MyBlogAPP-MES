@model BlogAPP.Models.ViewModel.BlogDetailViewModel

<section class="banner-bottom">
	<div class="container">
		<div class="row">
			<div class="col-lg-8 left-blog-info-w3layouts-agileits text-left">
				<div class="blog-grid-top">
					<div class="b-grid-top">
						<div class="blog_info_left_grid">

							<img src="@Model.Blog.BlogImage" class="img-fluid" alt="">

						</div>
						<div class="blog-info-middle mt-5">
							<ul style="list-style-type:none;" class="d-flex flex-row-reverse gap-2">
								<li>
									<a href="#" style="text-decoration:none">
										<i class="bi bi-calendar-event"> @Model.Blog.Created_at.ToString("yyyy-MM-dd")</i>
									</a>
								</li>
								<li class="mx-2">
									<a href="#" style="text-decoration:none">
										<i class="bi bi-bookmark-heart"></i><span id="likesCount">@Model.Blog.Likes?.Count()</span>
									</a>
								</li>
								<li>
									<a href="#" style="text-decoration:none">
										<i class="bi bi-chat-dots"></i> @Model.Blog.Comments?.Count()
									</a>
								</li>

							</ul>
						</div>
					</div>
					<div>
						<h3>
							@Model.Blog.BlogTitle

						</h3>
						<p class="mt-4">
							@Html.Raw(@Model.Blog.BlogContent)
						</p>

					</div>
					<div class=" d-flex justify-content-center">

						@if (User.IsInRole("User") || User.IsInRole("Admin"))
						{

							<button type="button" class="btn btn-link fs-5" onclick="toggleLike(@Model.Blog.BlogID, this)" onfocus="changeStyleOnFocus(this)">
								@if (ViewBag.LikedBlogIds.Contains(@Model.Blog.BlogID))
								{
									<i class="bi bi-suit-heart-fill"></i>

								}
								else
								{
									<i class="bi bi-suit-heart"></i>

								}
							</button>
						}
					</div>

				</div>
				<div class="mt-5">
					@await Component.InvokeAsync("CommentListByBlog", new { BlogId = Model.Blog.BlogID })
				</div>
				<div class="mt-5 mb-5">
					@await Html.PartialAsync("~/Views/Comment/AddComment.cshtml")
				</div>




			</div>


		</div>
	</div>


</section>


<script>
	function changeStyleOnFocus(button) {

		button.style.boxShadow = "none";


	}

	function toggleLike(blogId, button) {
		$.ajax({
			url: '@Url.Action("ToggleLike", "Like")',
			method: 'POST',
			data: { blogId: blogId },
			success: function (response) {
				var icon = $(button).find("i");

				if (response.isLiked) {
					icon.removeClass("bi-suit-heart").addClass("bi-suit-heart-fill");
				} else {
					icon.removeClass("bi-suit-heart-fill").addClass("bi-suit-heart");
				}
				$.ajax({
					url: '@Url.Action("GetLikeCount", "Like")',
					method: 'GET',
					data: { blogId: blogId },
					success: function (data) {

						$('#likesCount').text(data.count);
					}
				});
			},
			error: function () {
				alert("Try Again Please.");
			}
		});
	}
</script>